{"ast":null,"code":"var _jsxFileName = \"/Users/leegodden/Desktop/dev/instagram/client/src/components/screens/CreatePost.js\";\nimport React, { useState, useEffect } from 'react';\nimport M from 'materialize-css';\nimport { useHistory } from 'react-router-dom';\n\nconst CretePost = () => {\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [image, setImage] = useState('');\n  const [url, setUrl] = useState('');\n  useEffect(() => {\n    if (url) {\n      fetch('/createpost', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('jwt')\n        },\n        body: JSON.stringify({\n          title,\n          body,\n          pic: url\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.error) {\n          M.toast({\n            html: data.error,\n            classes: '#c62828 red darken-3'\n          });\n        } else {\n          M.toast({\n            html: 'Created post Successfully',\n            classes: '#43a047 green darken-1'\n          });\n          history.push('/');\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [url]);\n\n  const postDetails = () => {\n    const data = new FormData();\n    data.append('file', image);\n    data.append('upload_preset', 'instagram');\n    data.append('cloud_name', 'leegodden');\n    fetch('https://api.cloudinary.com/v1_1/leegodden/image/upload', {\n      method: 'post',\n      body: data\n    }).then(res => res.json()).then(data => {\n      setUrl(data.url);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card input-filed\",\n    style: {\n      margin: '10px auto',\n      maxWidth: '500px',\n      padding: '20px',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"title\",\n    value: title,\n    onChange: event => setTitle(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"body\",\n    value: body,\n    onChange: event => setBody(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-field input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn #64b5f6 blue lighten\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"file\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: event => setImage(event.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-path-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"file-path validate\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn waves-effect waves-light #64b5f6 blue lighten\",\n    onClick: () => postDetails(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Upload\"));\n};\n\nexport default CreatePost;","map":{"version":3,"sources":["/Users/leegodden/Desktop/dev/instagram/client/src/components/screens/CreatePost.js"],"names":["React","useState","useEffect","M","useHistory","CretePost","history","title","setTitle","body","setBody","image","setImage","url","setUrl","fetch","method","headers","Authorization","localStorage","getItem","JSON","stringify","pic","then","res","json","data","error","toast","html","classes","push","catch","err","console","log","postDetails","FormData","append","margin","maxWidth","padding","textAlign","event","target","value","files","CreatePost"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport M from 'materialize-css';\nimport { useHistory } from 'react-router-dom';\nconst CretePost = () => {\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [image, setImage] = useState('');\n  const [url, setUrl] = useState('');\n  useEffect(() => {\n    if (url) {\n      fetch('/createpost', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('jwt')\n        },\n        body: JSON.stringify({\n          title,\n          body,\n          pic: url\n        })\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.error) {\n            M.toast({ html: data.error, classes: '#c62828 red darken-3' });\n          } else {\n            M.toast({\n              html: 'Created post Successfully',\n              classes: '#43a047 green darken-1'\n            });\n            history.push('/');\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [url]);\n\n  const postDetails = () => {\n    const data = new FormData();\n    data.append('file', image);\n    data.append('upload_preset', 'instagram');\n    data.append('cloud_name', 'leegodden');\n\n    fetch('https://api.cloudinary.com/v1_1/leegodden/image/upload', {\n      method: 'post',\n      body: data\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setUrl(data.url);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div\n      className=\"card input-filed\"\n      style={{\n        margin: '10px auto',\n        maxWidth: '500px',\n        padding: '20px',\n        textAlign: 'center'\n      }}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"title\"\n        value={title}\n        onChange={(event) => setTitle(event.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"body\"\n        value={body}\n        onChange={(event) => setBody(event.target.value)}\n      />\n      <div className=\"file-field input-field\">\n        <div className=\"btn #64b5f6 blue lighten\">\n          <span>file</span>\n          <input\n            type=\"file\"\n            onChange={(event) => setImage(event.target.files[0])}\n          />\n        </div>\n        <div className=\"file-path-wrapper\">\n          <input className=\"file-path validate\" type=\"text\" />\n        </div>\n      </div>\n      <button\n        className=\"btn waves-effect waves-light #64b5f6 blue lighten\"\n        onClick={() => postDetails()}\n      >\n        Upload\n      </button>\n    </div>\n  );\n};\n\nexport default CreatePost;\n"]},"metadata":{},"sourceType":"module"}